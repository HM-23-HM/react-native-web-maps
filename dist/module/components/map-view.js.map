{"version":3,"names":["GoogleMap","useJsApiLoader","useRef","React","forwardRef","memo","useCallback","useEffect","useImperativeHandle","useMemo","useState","mapMouseEventToMapEvent","transformRNCameraObject","logMethodNotImplementedWarning","logDeprecationWarning","useUserLocation","UserLocationMarker","Location","useApiLoaderOnce","googleMapsApiKey","isLoadedRef","current","isLoaded","_MapView","props","ref","map","setMap","isGesture","setIsGesture","userLocation","showUserLocation","showsUserLocation","requestPermission","onUserLocationChange","followUserLocation","followsUserLocation","_onMapReady","_map","_props$onMapReady","onMapReady","call","_onDragStart","_onRegionChange","bounds","getBounds","_props$onRegionChange","northEast","getNorthEast","southWest","getSouthWest","longitudeDelta","Math","abs","lng","latitudeDelta","lat","center","getCenter","onRegionChange","latitude","longitude","_onRegionChangeComplete","_props$onRegionChange2","onRegionChangeComplete","getCamera","altitude","heading","getHeading","pitch","getTilt","zoom","getZoom","setCamera","camera","moveCamera","animateCamera","_opts","getMapBoundaries","animateToRegion","region","_duration","google","maps","LatLngBounds","extend","fitBounds","fitToCoordinates","coordinates","options","forEach","c","edgePadding","setMapBoundaries","pointForCoordinate","coordinate","_map$getProjection","point","getProjection","fromLatLngToPoint","x","y","coordinateForPoint","_map$getProjection2","coord","fromPointToLatLng","Point","takeSnapshot","_options","addressForCoordinate","_coordinate","setGoogleApiKey","address","reverseGeocodeAsync","useGoogleMaps","administrativeArea","country","countryCode","isoCountryCode","locality","city","postalCode","name","subAdministrativeArea","subregion","subLocality","thoroughfare","animateToNavigation","_location","_bearing","_angle","animateToCoordinate","_latLng","animateToBearing","animateToViewingAngle","fitToElements","fitToSuppliedMarkers","_markers","setIndoorActiveLevelIndex","_index","panTo","coords","mapNode","_props$initialCamera","_props$initialCamera2","_props$initialCamera3","_props$initialCamera4","_props$initialRegion","_props$initialCamera5","_props$initialRegion2","createElement","onLoad","onBoundsChanged","onDragStart","onDragEnd","mapContainerStyle","flex","initialCamera","tilt","onDrag","_props$onPanDrag","onPanDrag","undefined","onClick","e","_props$onPress","onPress","onDblClick","_props$onDoublePress","onDoublePress","initialRegion","scrollwheel","zoomEnabled","disableDoubleClickZoom","zoomTapEnabled","zoomControl","zoomControlEnabled","rotateControl","rotateEnabled","minZoom","minZoomLevel","maxZoom","maxZoomLevel","scaleControl","showsScale","styles","customMapStyle","children","provider","console","warn","cloneElement","Fragment","loadingFallback","MapView"],"sources":["map-view.tsx"],"sourcesContent":["import { GoogleMap, useJsApiLoader } from '@react-google-maps/api';\nimport { ForwardedRef, useRef } from 'react';\nimport React, {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useState,\n} from 'react';\nimport type {\n  Address,\n  Camera,\n  EdgePadding,\n  LatLng,\n  MapViewProps,\n  Point,\n  Region,\n  SnapshotOptions,\n} from 'react-native-maps';\nimport type RNMapView from 'react-native-maps';\nimport { mapMouseEventToMapEvent } from '../utils/mouse-event';\nimport { transformRNCameraObject } from '../utils/camera';\nimport {\n  logMethodNotImplementedWarning,\n  logDeprecationWarning,\n} from '../utils/log';\nimport { useUserLocation } from '../hooks/use-user-location';\nimport { UserLocationMarker } from './user-location-marker';\nimport * as Location from 'expo-location';\n\nconst useApiLoaderOnce = (googleMapsApiKey: string) => {\n  const isLoadedRef = useRef(false);\n  if (isLoadedRef.current) return { isLoaded: true };\n  const { isLoaded } = useJsApiLoader({\n    googleMapsApiKey: googleMapsApiKey || '',\n  });\n  if (isLoaded) isLoadedRef.current = true;\n  return { isLoaded };\n};\n\nfunction _MapView(\n  props: MapViewProps & { nonce: string },\n  ref: ForwardedRef<Partial<RNMapView>>\n) {\n  // State\n\n  const [map, setMap] = useState<google.maps.Map | null>(null);\n  const [isGesture, setIsGesture] = useState<boolean>(false);\n\n  const userLocation = useUserLocation({\n    showUserLocation: props.showsUserLocation || false,\n    requestPermission:\n      props.showsUserLocation || !!props.onUserLocationChange || false,\n    onUserLocationChange: props.onUserLocationChange,\n    followUserLocation: props.followsUserLocation || false,\n  });\n\n  const { isLoaded } = useApiLoaderOnce(props.googleMapsApiKey || '');\n\n  // Callbacks\n\n  const _onMapReady = useCallback(\n    (_map: google.maps.Map) => {\n      setMap(_map);\n      props.onMapReady?.();\n    },\n    [map, props.onMapReady]\n  );\n\n  const _onDragStart = useCallback(() => {\n    setIsGesture(true);\n  }, []);\n\n  const _onRegionChange = useCallback(() => {\n    const bounds = map?.getBounds();\n    if (bounds) {\n      const northEast = bounds.getNorthEast();\n      const southWest = bounds.getSouthWest();\n      const longitudeDelta = Math.abs(northEast.lng() - southWest.lng());\n      const latitudeDelta = Math.abs(northEast.lat() - southWest.lat());\n      const center = bounds.getCenter();\n      props.onRegionChange?.(\n        {\n          latitude: center.lat(),\n          longitude: center.lng(),\n          latitudeDelta,\n          longitudeDelta,\n        },\n        { isGesture }\n      );\n    }\n  }, [map, props.onRegionChange, isGesture]);\n\n  const _onRegionChangeComplete = useCallback(() => {\n    const bounds = map?.getBounds();\n    if (bounds) {\n      const northEast = bounds.getNorthEast();\n      const southWest = bounds.getSouthWest();\n      const longitudeDelta = Math.abs(northEast.lng() - southWest.lng());\n      const latitudeDelta = Math.abs(northEast.lat() - southWest.lat());\n      const center = bounds.getCenter();\n      props.onRegionChangeComplete?.(\n        {\n          latitude: center.lat(),\n          longitude: center.lng(),\n          latitudeDelta,\n          longitudeDelta,\n        },\n        { isGesture }\n      );\n    }\n    setIsGesture(false);\n  }, [map, props.onRegionChange, isGesture]);\n\n  // Ref handle\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      async getCamera(): Promise<Camera> {\n        const center = map?.getCenter();\n        return {\n          altitude: 0,\n          heading: map?.getHeading() || 0,\n          pitch: map?.getTilt() || 0, // TODO: Review this\n          zoom: map?.getZoom() || 0, // TODO: Normalize value\n          center: {\n            latitude: center?.lat() || 0,\n            longitude: center?.lng() || 0,\n          },\n        };\n      },\n      setCamera(camera: Partial<Camera>): void {\n        map?.moveCamera(transformRNCameraObject(camera));\n      },\n      animateCamera(\n        camera: Partial<Camera>,\n        _opts?: { duration?: number }\n      ): void {\n        map?.moveCamera(transformRNCameraObject(camera));\n      },\n      async getMapBoundaries(): Promise<{\n        northEast: LatLng;\n        southWest: LatLng;\n      }> {\n        const bounds = map?.getBounds();\n\n        const northEast = bounds?.getNorthEast();\n        const southWest = bounds?.getSouthWest();\n\n        return {\n          northEast: {\n            latitude: northEast?.lat() || 0,\n            longitude: northEast?.lng() || 0,\n          },\n          southWest: {\n            latitude: southWest?.lat() || 0,\n            longitude: southWest?.lng() || 0,\n          },\n        };\n      },\n      animateToRegion(region: Region, _duration?: number): void {\n        const bounds = new google.maps.LatLngBounds();\n\n        // Source: https://github.com/react-native-maps/react-native-maps/blob/master/android/src/main/java/com/airbnb/android/react/maps/AirMapView.java#L503\n\n        // southWest\n        bounds.extend({\n          lat: region.latitude - region.latitudeDelta / 2,\n          lng: region.longitude - region.longitudeDelta / 2,\n        });\n\n        // northEast\n        bounds.extend({\n          lat: region.latitude + region.latitudeDelta / 2,\n          lng: region.longitude + region.longitudeDelta / 2,\n        });\n\n        // panToBounds not working??\n        // map?.panToBounds(bounds);\n        map?.fitBounds(bounds);\n      },\n      fitToCoordinates(\n        coordinates?: LatLng[],\n        options?: { edgePadding?: EdgePadding; animated?: boolean }\n      ): void {\n        const bounds = new google.maps.LatLngBounds();\n\n        if (coordinates) {\n          coordinates?.forEach((c) =>\n            bounds.extend({\n              lat: c.latitude,\n              lng: c.longitude,\n            })\n          );\n        }\n\n        map?.fitBounds(bounds, options?.edgePadding as google.maps.Padding);\n      },\n      setMapBoundaries(northEast: LatLng, southWest: LatLng): void {\n        const bounds = new google.maps.LatLngBounds();\n\n        bounds.extend({ lat: northEast.latitude, lng: northEast.longitude });\n        bounds.extend({ lat: southWest.latitude, lng: southWest.longitude });\n\n        map?.fitBounds(bounds);\n      },\n      async pointForCoordinate(coordinate: LatLng): Promise<Point> {\n        const point = map?.getProjection()?.fromLatLngToPoint({\n          lat: coordinate.latitude,\n          lng: coordinate.longitude,\n        });\n        return point || { x: 0, y: 0 };\n      },\n      async coordinateForPoint(point: Point): Promise<LatLng> {\n        const coord = map\n          ?.getProjection()\n          ?.fromPointToLatLng(new google.maps.Point(point.x, point.y));\n\n        return { latitude: coord?.lat() || 0, longitude: coord?.lng() || 0 };\n      },\n      async takeSnapshot(_options?: SnapshotOptions): Promise<string> {\n        logMethodNotImplementedWarning('takeSnapshot');\n        return '';\n      },\n      async addressForCoordinate(_coordinate: LatLng): Promise<Address> {\n        Location.setGoogleApiKey(props.googleMapsApiKey || '');\n        const [address] = await Location.reverseGeocodeAsync(_coordinate, {\n          useGoogleMaps: true,\n        });\n\n        return address\n          ? {\n              administrativeArea: address.region || '',\n              country: address.country || '',\n              countryCode: address.isoCountryCode || '',\n              locality: address.city || '',\n              postalCode: address.postalCode || '',\n              name: address.name || '',\n              subAdministrativeArea: address.subregion || '',\n              subLocality: address.city || '',\n              thoroughfare: '',\n            }\n          : (null as unknown as Address);\n      },\n      animateToNavigation(\n        _location: LatLng,\n        _bearing: number,\n        _angle: number,\n        _duration?: number\n      ): void {\n        logDeprecationWarning('animateToNavigation');\n      },\n      animateToCoordinate(_latLng: LatLng, _duration?: number): void {\n        logDeprecationWarning('animateToCoordinate');\n      },\n      animateToBearing(_bearing: number, _duration?: number): void {\n        logDeprecationWarning('animateToBearing');\n      },\n      animateToViewingAngle(_angle: number, _duration?: number): void {\n        logDeprecationWarning('animateToViewingAngle');\n      },\n      fitToElements(_options?: {\n        edgePadding?: EdgePadding;\n        animated?: boolean;\n      }): void {\n        logMethodNotImplementedWarning('fitToElements');\n      },\n      fitToSuppliedMarkers(\n        _markers: string[],\n        _options?: { edgePadding?: EdgePadding; animated?: boolean }\n      ): void {\n        logMethodNotImplementedWarning('fitToSuppliedMarkers');\n      },\n      setIndoorActiveLevelIndex(_index: number): void {\n        logMethodNotImplementedWarning('setIndoorActiveLevelIndex');\n      },\n    }),\n    [map]\n  );\n\n  // Side effects\n\n  useEffect(() => {\n    if (props.followsUserLocation && userLocation) {\n      map?.panTo({\n        lat: userLocation.coords.latitude,\n        lng: userLocation.coords.longitude,\n      });\n    }\n  }, [props.followsUserLocation, userLocation]);\n\n  const mapNode = useMemo(\n    () => (\n      <GoogleMap\n        onLoad={_onMapReady}\n        onBoundsChanged={_onRegionChange}\n        onDragStart={_onDragStart}\n        onDragEnd={_onRegionChangeComplete}\n        mapContainerStyle={{ flex: 1 }}\n        zoom={props.initialCamera?.zoom || 3}\n        heading={props.initialCamera?.heading}\n        tilt={props.initialCamera?.pitch}\n        onDrag={() => {\n          const center = map?.getCenter();\n\n          props.onPanDrag?.(\n            mapMouseEventToMapEvent(\n              null,\n              center && { latitude: center.lat(), longitude: center.lng() },\n              map,\n              undefined\n            )\n          );\n        }}\n        onClick={(e) =>\n          props.onPress?.(mapMouseEventToMapEvent(e, null, map, 'press'))\n        }\n        onDblClick={(e) =>\n          props.onDoublePress?.(mapMouseEventToMapEvent(e, null, map, 'press'))\n        }\n        center={\n          map\n            ? map.getCenter()\n            : {\n                lat:\n                  props.initialCamera?.center.latitude ||\n                  props.initialRegion?.latitude ||\n                  0,\n                lng:\n                  props.initialCamera?.center.longitude ||\n                  props.initialRegion?.longitude ||\n                  0,\n              }\n        }\n        options={{\n          scrollwheel: props.zoomEnabled,\n          disableDoubleClickZoom: !props.zoomTapEnabled,\n          zoomControl: props.zoomControlEnabled,\n          rotateControl: props.rotateEnabled,\n          minZoom: props.minZoomLevel, // TODO: Normalize value\n          maxZoom: props.maxZoomLevel, // TODO: Normalize value\n          scaleControl: props.showsScale,\n          styles: props.customMapStyle,\n          ...(props.options || {}),\n        }}\n      >\n        {props.showsUserLocation && userLocation && (\n          <UserLocationMarker coordinates={userLocation.coords} />\n        )}\n        {props.children}\n      </GoogleMap>\n    ),\n    [\n      _onRegionChange,\n      _onMapReady,\n      userLocation,\n      props.initialCamera,\n      props.initialRegion,\n      props.showsUserLocation,\n      props.onPanDrag,\n      props.onPress,\n      props.onDoublePress,\n      props.zoomEnabled,\n      props.zoomTapEnabled,\n      props.zoomControlEnabled,\n      props.rotateEnabled,\n      props.minZoomLevel,\n      props.maxZoomLevel,\n      props.showsScale,\n      props.customMapStyle,\n      props.options,\n    ]\n  );\n\n  if (props.provider !== 'google') {\n    console.warn(\n      '[WARNING] `react-native-web-maps` only suppots google for now. Please pass \"google\" as provider in props'\n    );\n\n    return null;\n  }\n\n  return isLoaded ? (\n    React.cloneElement(mapNode)\n  ) : (\n    <>{props.loadingFallback || null}</>\n  );\n}\n\nexport const MapView = memo(forwardRef(_MapView));\n"],"mappings":"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","ignoreList":[]}